train:
  get_spectrogram: # special key for getting spectrogram
    _target_: torch.nn.Sequential
    _args_:
      - _target_: torchaudio.transforms.MelSpectrogram
        sample_rate: 16000
        n_mels: 80
        win_length: 400
        hop_length: 160
        n_fft: 512
      - _target_: torchaudio.transforms.AmplitudeToDB
        stype: 'power'
        top_db: 80
      # - _target_: src.transforms.RandomTimeStretch
      #   min_rate: 0.9
      #   max_rate: 1.1
      #   p: 0.5
      #   hop_length: 160
      #   n_freq: 80
  audio: # name of the tensor on which we apply transform
    _target_: torch.nn.Sequential
    _args_:
      - _target_: src.transforms.AddNoise
        min_snr_in_db: 10
        max_snr_in_db: 30
        p: 0.5
      # - _target_: src.transforms.RandomPitchShift
      #   min_transpose_semitones: -2
      #   max_transpose_semitones: 2
      #   p: 0.3

inference:
  get_spectrogram:
    _target_: torch.nn.Sequential
    _args_:
      - _target_: torchaudio.transforms.MelSpectrogram
        sample_rate: 16000
        n_mels: 80
        win_length: 400
        hop_length: 160
        n_fft: 512
      - _target_: torchaudio.transforms.AmplitudeToDB
        stype: 'power'
        top_db: 80
